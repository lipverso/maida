package com.maida.demo.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.maida.demo.dto.AccountDTO;
import com.maida.demo.exception.AccountNumberAlreadyExistentException;
import com.maida.demo.exception.UnauthorizedAccessException;
import com.maida.demo.model.Account;
import com.maida.demo.repository.AccountRepository;
import com.maida.demo.repository.UserRepository;

import lombok.experimental.var;

@Service
public class AccountService {

	@Autowired
	private UserRepository userRepository;
	
	@Autowired
	private AccountRepository accountRepository;
	
	public Account register(Account account, String token) {
		var user = userRepository.findByToken(token).orElse(null);
		
		if (user != null) {
			account.setUser(user);
		} else {
			throw new UnauthorizedAccessException();
		}
			
		return account;
		
		findAccountNumber(account);

	}

	private void findAccountNumber(Account account) {
		var newAccount = accountRepository.findByNumber(account.getNumber()).orElse(null);
		
		if (newAccount == null) {
			accountRepository.save(account);
		} else {
			throw new AccountNumberAlreadyExistentException();
		}
	}

}
